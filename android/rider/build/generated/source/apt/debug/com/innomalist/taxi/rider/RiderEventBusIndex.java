package com.innomalist.taxi.rider;

import org.greenrobot.eventbus.meta.SimpleSubscriberInfo;
import org.greenrobot.eventbus.meta.SubscriberMethodInfo;
import org.greenrobot.eventbus.meta.SubscriberInfo;
import org.greenrobot.eventbus.meta.SubscriberInfoIndex;

import org.greenrobot.eventbus.ThreadMode;

import java.util.HashMap;
import java.util.Map;

/** This class is generated by EventBus, do not edit. */
public class RiderEventBusIndex implements SubscriberInfoIndex {
    private static final Map<Class<?>, SubscriberInfo> SUBSCRIBER_INDEX;

    static {
        SUBSCRIBER_INDEX = new HashMap<Class<?>, SubscriberInfo>();

        putIndex(new SimpleSubscriberInfo(com.innomalist.taxi.rider.activities.main.MainActivity.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onAddressesReceived",
                    com.innomalist.taxi.rider.events.CRUDAddressResultEvent.class, ThreadMode.MAIN),
            new SubscriberMethodInfo("onCalculateFareReceived",
                    com.innomalist.taxi.rider.events.CalculateFareResultEvent.class, ThreadMode.MAIN),
            new SubscriberMethodInfo("onDriversLocationResult",
                    com.innomalist.taxi.rider.events.GetDriversLocationResultEvent.class, ThreadMode.MAIN),
            new SubscriberMethodInfo("onRequestTaxiError",
                    com.innomalist.taxi.rider.events.ServiceRequestErrorEvent.class, ThreadMode.MAIN),
            new SubscriberMethodInfo("onProfileChanged",
                    com.innomalist.taxi.common.events.ProfileInfoChangedEvent.class, ThreadMode.MAIN, 0, true),
        }));

        putIndex(new SimpleSubscriberInfo(com.innomalist.taxi.rider.activities.travel.TravelActivity.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onServiceFinished", com.innomalist.taxi.rider.events.ServiceFinishedEvent.class,
                    ThreadMode.MAIN),
            new SubscriberMethodInfo("onServiceCanceled",
                    com.innomalist.taxi.common.events.ServiceCancelResultEvent.class, ThreadMode.MAIN),
            new SubscriberMethodInfo("onReviewResult", com.innomalist.taxi.rider.events.ReviewDriverResultEvent.class,
                    ThreadMode.MAIN),
            new SubscriberMethodInfo("onInitializeTravel",
                    com.innomalist.taxi.rider.events.AcceptDriverResultEvent.class, ThreadMode.MAIN, 0, true),
            new SubscriberMethodInfo("onTravelStarted", com.innomalist.taxi.rider.events.ServiceStartedEvent.class,
                    ThreadMode.MAIN),
            new SubscriberMethodInfo("onTravelInfoReceived",
                    com.innomalist.taxi.rider.events.GetTravelInfoResultEvent.class, ThreadMode.MAIN),
            new SubscriberMethodInfo("onCallRequested",
                    com.innomalist.taxi.common.events.ServiceCallRequestResultEvent.class, ThreadMode.MAIN),
        }));

        putIndex(new SimpleSubscriberInfo(com.innomalist.taxi.rider.activities.profile.ProfileActivity.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onProfileInfoChanged",
                    com.innomalist.taxi.common.events.EditProfileInfoResultEvent.class, ThreadMode.MAIN),
            new SubscriberMethodInfo("onProfileImageChanged",
                    com.innomalist.taxi.common.events.ChangeProfileImageResultEvent.class, ThreadMode.MAIN),
        }));

        putIndex(new SimpleSubscriberInfo(com.innomalist.taxi.rider.activities.addresses.AddressesActivity.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onCRUDResultReceived",
                    com.innomalist.taxi.rider.events.CRUDAddressResultEvent.class, ThreadMode.MAIN),
        }));

        putIndex(new SimpleSubscriberInfo(com.innomalist.taxi.rider.activities.main.dialogs.DriverAcceptedDialog.class,
                true, new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onServiceRequestResult",
                    com.innomalist.taxi.rider.events.ServiceRequestResultEvent.class, ThreadMode.MAIN),
            new SubscriberMethodInfo("onDriverAccepted", com.innomalist.taxi.rider.events.NewDriverAcceptedEvent.class,
                    ThreadMode.MAIN),
            new SubscriberMethodInfo("onAcceptDriver", com.innomalist.taxi.rider.events.AcceptDriverUIEvent.class,
                    ThreadMode.MAIN),
        }));

        putIndex(new SimpleSubscriberInfo(com.innomalist.taxi.rider.activities.splash.SplashActivity.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("onLoginResultEvent", com.innomalist.taxi.rider.events.LoginResultEvent.class,
                    ThreadMode.MAIN),
            new SubscriberMethodInfo("onConnectedResult", com.innomalist.taxi.common.events.ConnectResultEvent.class,
                    ThreadMode.MAIN),
            new SubscriberMethodInfo("onServiceStarted",
                    com.innomalist.taxi.common.events.BackgroundServiceStartedEvent.class),
        }));

        putIndex(new SimpleSubscriberInfo(com.innomalist.taxi.rider.services.RiderService.class, true,
                new SubscriberMethodInfo[] {
            new SubscriberMethodInfo("connectSocket", com.innomalist.taxi.common.events.ConnectEvent.class),
            new SubscriberMethodInfo("login", com.innomalist.taxi.common.events.LoginEvent.class),
            new SubscriberMethodInfo("EditProfile", com.innomalist.taxi.common.events.EditProfileInfoEvent.class),
            new SubscriberMethodInfo("requestTaxi", com.innomalist.taxi.rider.events.ServiceRequestEvent.class),
            new SubscriberMethodInfo("cancelTravel", com.innomalist.taxi.common.events.ServiceCancelEvent.class),
            new SubscriberMethodInfo("acceptDriver", com.innomalist.taxi.rider.events.AcceptDriverEvent.class),
            new SubscriberMethodInfo("getTravels", com.innomalist.taxi.common.events.GetTravelsEvent.class),
            new SubscriberMethodInfo("getDriverLocation", com.innomalist.taxi.rider.events.GetTravelInfoEvent.class),
            new SubscriberMethodInfo("reviewDriver", com.innomalist.taxi.rider.events.ReviewDriverEvent.class),
            new SubscriberMethodInfo("ChangeProfileImage",
                    com.innomalist.taxi.common.events.ChangeProfileImageEvent.class),
            new SubscriberMethodInfo("getDriversLocation",
                    com.innomalist.taxi.rider.events.GetDriversLocationEvent.class),
            new SubscriberMethodInfo("WriteComplaint", com.innomalist.taxi.common.events.WriteComplaintEvent.class),
            new SubscriberMethodInfo("chargeAccount", com.innomalist.taxi.common.events.ChargeAccountEvent.class),
            new SubscriberMethodInfo("HideTravel", com.innomalist.taxi.common.events.HideTravelEvent.class),
            new SubscriberMethodInfo("callRequest", com.innomalist.taxi.common.events.ServiceCallRequestEvent.class),
            new SubscriberMethodInfo("onCalculateFareRequested",
                    com.innomalist.taxi.rider.events.CalculateFareRequestEvent.class),
            new SubscriberMethodInfo("crudAddress", com.innomalist.taxi.rider.events.CRUDAddressRequestEvent.class),
        }));

    }

    private static void putIndex(SubscriberInfo info) {
        SUBSCRIBER_INDEX.put(info.getSubscriberClass(), info);
    }

    @Override
    public SubscriberInfo getSubscriberInfo(Class<?> subscriberClass) {
        SubscriberInfo info = SUBSCRIBER_INDEX.get(subscriberClass);
        if (info != null) {
            return info;
        } else {
            return null;
        }
    }
}
